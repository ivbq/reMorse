välkommen till dokumentation som är i princip omöjlig att skriva i om du inte förstår dokumentation

Först och främst måste man veta att varje instruktion är uppdelade i 2 morse kod commands där varje 
command står för ett hexadecimalt nummer mellan 0 och F.

2 hexadecimala tecken blir 8 binära tecken, alltså 8 bitar som vi var begränsade till. 
Eftersom våra operation endast var 3 bitar blir det första morse kod tecknet annorlunda beroende på 
vad som skrivs efter, vilken variabel man använder till exempel, eftersom det krävs 4 bitar för varje morse kod tecken.
De tre första bitarna är alltid avsett till vilken operation man gör.

Det finns 4 olika variabler som kallas för a, b, c och d. Dessa refereras dock via 2 binära tecken, alltså 00, 01, 10 och 11




Nedan är alla operationer, vad de gör och vad mer man behöver skriva efter operationen.


000 Input       3bit op + 2bit var

    Input låter användaren skriva in ett tal i programmet som sedan sparas på en variabel. 
    Efter operationen skrivs vilken variabel man vill använda på 2 bitar, alltså 00-11. 


001 Output      3bit op + 2bit var

    Output skriver ut talet som är sparat på en viss variabel. 
    Efter operationen skrivs vilken variabel man vill använda på 2 bitar, alltså 00-11. 


010 End         3bit op

    End stänger av programmet


011 Add/Sub     3bit op + 1bit (+/-) + 2bit var  + 2bit var

    Denna operation är lite speciell då den används för att både addera och subtrahera en variabel med en annan.
    Den fjärde biten avgör om den andra variabeln ska adderas (0) eller subtraheras (1). 
    På de 4 sista bitarna står vilka två varibler man vill använda där den första är den där svaret sparas på och alltid är positiv. 


100 Addi        3bit op + 2bit var + 3bit (0-7)

    Addi adderar en variabel med en siffra som inte måste sparas på en variabel.
    Efter de 3 bitarna för operationen skrivs det in vilken variabel man vill använda och sedan vilken 
    siffra (i binär form) man vill addera variabeln med. siffran kan vara mellan 0 och 7.  


101 Subi        3bit op + 2bit var + 3bit (0-7)

    Subi är likadan som Addi bara att variablen subtraheras med siffran istället för adderas. 


110 Jump         3bit op + 1bit (+/-) + 4bit (0-15)

    Jump hoppar mellan instruktioner i koden. 
    Den fjärde biten säger om man ska hoppa fram eller bak där 0 är positivt och hoppar alltså fram medan 1 är negativt och hoppar bak.
    De 4 sista bitarna står för hur långt man ska hoppa, mellan 0 och 15 vilket är det högsta man kan få med 4 binära tecken


111 Check if equal         3bit op + 1bit (imm/var) + 2bit var  + 2bit (0-3)/var

    Denna operation kollar om en variabel är lika med en annan variabel eller siffra, om de är lika hoppar den över nästa instruktion (som ofta är en Jump). 
    Den fjärde biten säger om de sista 2 bitarna är en variabel eller siffra. 
    De 2 nästkommande bitarna säger vilken variabel man ska jämföra med. 
    De sista 2 bitarna är antingen en variabel eller en siffra mellan 0 och 3. 